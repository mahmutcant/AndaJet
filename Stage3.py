import math
from PyQt5.QtWidgets import QWidget,QMessageBox
from PyQt5.QtGui import QDoubleValidator
from PyQt5.uic import loadUi
class stage3(QWidget):
    def __init__(self):
        super().__init__()
        loadUi("Stage3.ui",self)
        QWidget.setStyleSheet(self, "QLineEdit{border:2px solid transparent;border-radius:9px}")
        QWidget.setFixedSize(self,750,577)
        self.gama.hide()
        self.Ts2.hide()
        self.Ps2.hide()
        self.p02_p01.hide()
        self.W2.hide()
        self.U2.hide()
        self.Vy2.hide()
        self.m1.hide()
        self.P01.hide()
        self.T01.hide()
        #self.pushButton.clicked.connect(self.hesapla)
        self.txtFiCp.editingFinished.connect(self.hesapla)
        self.txtDeltaHU3.textChanged.connect(self.hesapla)
        self.BtnOnceki.setStyleSheet("QPushButton::hover{background-color:transparent;color:lightseagreen}"
                                     "QPushButton{background-color:transparent}")
        self.BtnOnceki.clicked.connect(self.Onceki)
        self.txtFiCp.setPlaceholderText("Φ(CP)")
        self.txtDeltaHU3.setPlaceholderText("ΔH/(U3^2)")
        self.txtFiCp.setValidator(QDoubleValidator(self))
        self.txtDeltaHU3.setValidator(QDoubleValidator(self))
    def hesapla(self):
        gama=float(self.gama.text())
        Ts2=float(self.Ts2.text())
        Ps2=float(self.Ps2.text())
        p02_p01=float(self.p02_p01.text())
        W2=float(self.W2.text())
        if(len(self.txtDeltaHU3.text())==0):
            self.txtDeltaHU3.setText("0.0")
        if(len(self.txtFiCp.text())==0):
            self.txtFiCp.setText("0.0")
        DeltaHU3=float(self.txtDeltaHU3.text())
        U3=float(self.txtU3.text())
        U2=float(self.U2.text())
        Vy2=float(self.Vy2.text())
        Vx3=float(self.txtVx3.text())
        T0r2=float(self.txtT0r2.text())
        m1=float(self.m1.text())
        p01=float(self.P01.text())
        DeltaH=DeltaHU3*U3**2
        try:
            self.txtDeltaH.setText(str(DeltaH))
        except:
            self.txtDeltaH.setText("0.0")
        try:
            Vy3=((U2*Vy2)-DeltaH)/U3
        except:
            Vy3=0.0
        try:
            self.txtVy3.setText(str(Vy3))
        except:
            self.txtVy3.setText("0.0")
        try:
            a=math.atan(Vy3/Vx3)
            alfa3=math.degrees(a)
        except:
            alfa3=0.0
        try:
            self.txtAlfa3.setText(str(alfa3))
        except:
            self.txtAlfa3.setText("0.0")
        try:
            V3=(Vy3**2+Vx3**2)**0.5
        except:
            V3=0.0
        try:
            self.txtV3.setText(str(V3))
        except:
            self.txtV3.setText("0.0")
        try:
            Wy3=Vy3-U3
        except:
            Wy3=0.0
        try:
            self.txtWy3.setText(str(Wy3))
        except:
            self.txtWy3.setText("0.0")
        try:
            W3=(Wy3**2+Vx3**2)**0.5
        except:
            W3=0.0
        try:
            self.txtW3.setText(str(W3))
        except:
            self.txtW3.setText("0.0")
        try:
            b=math.atan(Wy3/Vx3)
            beta3=math.degrees(b)
        except:
            beta3=0.0
        try:
            self.txtBeta3.setText(str(beta3))
        except:
            self.txtBeta3.setText("0.0")
        FiCP=float(self.txtFiCp.text())
        try:
            ToR3=T0r2+((U3**2)-(U2**2))/(2*FiCP)
        except:
            ToR3=0.0
        self.txtToR3.setText(str(ToR3))
        try:
            Ts3=ToR3-((W3**2)/(2*FiCP))
        except:
            Ts3=0.0
        self.txtTs3.setText(str(Ts3))
        try:
            a3=(gama*287*Ts3)**0.5
        except:
            a3=0.0
        self.txta3.setText(str(a3))
        try:
            MR3=W3/a3
        except:
            MR3=0.0
        self.txtMR3.setText(str(MR3))
        try:
            MA3=V3/a3
        except:
            MA3=0.0
        self.txtMA3.setText(str(MA3))
        POr3=float(self.txtPOr3.text())
        try:
            Ps3=POr3/(1+(gama-1)/2*(MR3**2))**3
        except:
            Ps3=0.0
        self.txtPs3.setText(str(Ps3))
        try:
            P03=Ps3*(1+(gama-1)/2*(MA3**2))**3
        except:
            P03=0.0
        self.txtP03.setText(str(P03))
        try:
            T03=Ts3*(1+(gama-1)/2*(MA3**2))
        except:
            T03=0.0
        self.txtT03.setText(str(T03))
        try:
            g3=Ps3/(0.287*Ts3)
        except:
            g3=0.0
        self.txtg3.setText(str(g3))
        try:
            Area3=m1/(g3*Vx3)
        except:
            Area3=0.0
        self.txtArea3.setText(str(Area3))
        try:
            H3=Area3/(2*math.pi*0.234)
        except:
            H3=0.0
        self.txtH3.setText(str(H3))
        Rm3=float(self.txtRm3.text())
        try:
            Rt3=Rm3+(H3/2)
        except:
            Rt3=0.0
        self.txtRt3.setText(str(Rt3))
        try:
            Rh3=Rm3-(H3/2)
        except:
            Rh3=0.0
        self.txtRh3.setText(str(Rh3))
        try:
            Pr=p01/P03
        except:
            Pr=0.0
        self.txtPr.setText(str(Pr))
        T01 = float(self.T01.text())
        try:
            POWER=m1*FiCP*(T01-T03)
        except:
            POWER=0.0
        self.txtPOWER.setText(str(POWER))
        try:
            T03s=T01*((P03/p01)**((gama-1)/gama))
        except:
            T03s=0.0
        self.txtT03s.setText(str(T03s))
        try:
            N=(T01-T03)/(T01-T03s)*100
        except:
            N=0.0
        self.txtN.setText(str(N))
    def Onceki(self):
        self.close()
